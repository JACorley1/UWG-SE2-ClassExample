package edu.westga.cs3212.meal_planning.view;

import java.io.IOException;

import edu.westga.cs3212.meal_planning.Main;
import edu.westga.cs3212.meal_planning.model.Recipe;
import javafx.event.Event;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.stage.Stage;

/** Contains utility methods handling javafx processes for the views. 
 * 
 * @author jcorley
 */
public class ScreenUtilities {
	public static final String RECIPE_SELECT_SCREEN = "view/RecipeSelectScreen.fxml";
	public static final String RECIPE_VIEW_SCREEN = "view/RecipeViewScreen.fxml";
	public static final String CATEGORY_SELECT_SCREEN = "view/CategorySelectScreen.fxml";

	/** Gets the stage for the current view from the event generated by the view.
	 * 
	 * @param event event generated by the view
	 * 
	 * @return stage for the current view
	 */
	private static Stage getStageForCurrentView(Event event) {
		return (Stage) ((Node) event.getSource()).getScene().getWindow();
	}
	
	/** Generates an FXML Loader for the target view that can be used to access the 
	 * controller (to perform any setup for the new view) and root (to generate a new 
	 * stage for the view).
	 * 
	 * @param targetViewFxmlLocation location of the fxml file for the target view
	 * 
	 * @return the FXMLLoader for the target view
	 * 
	 * @throws IOException if the fxml file is unavailable or improperly formatted
	 */
	private static FXMLLoader getFXMLLoaderForTargetView(String targetViewFxmlLocation) throws IOException {
		FXMLLoader loader = new FXMLLoader();
		loader.setLocation(Main.class.getResource(targetViewFxmlLocation));
		loader.load();
		return loader;
	}

	/** Opens the Recipe Select Screen for the specified category of recipes.
	 * 
	 * @param event event generated by the view that is requesting to open the Recipe Select Screen
	 * @param category category of recipes to be displayed on the Recipe Select Screen
	 * 
	 * @throws IOException generated if the fxml for the Recipe Select Screen is not available.
	 */
	public static void openRecipeSelectScreen(Event event, String category) throws IOException {
		RecipeStore.setCurrentCategory(category);
		Stage currentStage = ScreenUtilities.getStageForCurrentView(event);
		FXMLLoader loader = ScreenUtilities.getFXMLLoaderForTargetView(ScreenUtilities.RECIPE_SELECT_SCREEN);
		Scene recipeSelectScreen = new Scene(loader.getRoot());
		currentStage.setScene(recipeSelectScreen);
	}

	/** Opens the Recipe Select Screen for the current category of recipes.
	 * 
	 * @param event event generated by the view that is requesting to open the Recipe Select Screen
	 * 
	 * @throws IOException generated if the fxml for the Recipe Select Screen is not available.
	 */
	public static void openRecipeSelectScreen(Event event) throws IOException {
		Stage currentStage = ScreenUtilities.getStageForCurrentView(event);
		FXMLLoader loader = ScreenUtilities.getFXMLLoaderForTargetView(ScreenUtilities.RECIPE_SELECT_SCREEN);
		Scene recipeSelectScreen = new Scene(loader.getRoot());
		currentStage.setScene(recipeSelectScreen);
	}

	/** Opens the Recipe View Screen for the specified recipe.
	 * 
	 * @param event event generated by the view that is requesting to open the Recipe View Screen
	 * @param recipe recipe to be displayed on the Recipe View Screen
	 * 
	 * @throws IOException generated if the fxml for the Recipe View Screen is not available.
	 */
	public static void openRecipeViewScreen(Event event, Recipe recipe) throws IOException {
		Stage currentStage = ScreenUtilities.getStageForCurrentView(event);
		FXMLLoader loader = ScreenUtilities.getFXMLLoaderForTargetView(ScreenUtilities.RECIPE_VIEW_SCREEN);
		((RecipeViewScreen) loader.getController()).setRecipe(recipe);
		Scene recipeViewScreen = new Scene(loader.getRoot());
		currentStage.setScene(recipeViewScreen);
	}

	/** Opens the Category Select Screen for the specified recipe.
	 * 
	 * @param event event generated by the view that is requesting to open the Category Select Screen
	 * 
	 * @throws IOException generated if the fxml for the Category Select Screen is not available.
	 */
	public static void openCategorySelectScreen(Event event) throws IOException {
		Stage currentStage = ScreenUtilities.getStageForCurrentView(event);
		FXMLLoader loader = ScreenUtilities.getFXMLLoaderForTargetView(ScreenUtilities.CATEGORY_SELECT_SCREEN);
		Scene categorySelectScreen = new Scene(loader.getRoot());
		currentStage.setScene(categorySelectScreen);
	}

}
